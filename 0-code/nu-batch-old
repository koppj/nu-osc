#!/bin/bash

## Get Kerberos tickets
#CRON_HOSTS=$(condor_status | \
#               sed -n -e "s/.*\(flx.*\)\.fnal\..*/\1/ p" - | uniq)
#for THIS_HOST in $CRON_HOSTS; do
#  ssh $THIS_HOST /usr/krb5/bin/kcroninit
#done

# Set paths
export DATA_PATH=$(pwd)/../results
export CODE_PATH=${DATA_PATH/#*jkopp/$HOME}/../0-code/
cd $DATA_PATH

if [[ -z $NU_SIZE ]]; then
  NU_SIZE=1;
fi

# Generate code tarball
export CONDOR_TARBALL="nu_tarball_${OUT_FILE%%.dat}.tar.gz"
tar -zcf $CONDOR_TARBALL $CODE_PATH

# For parallel jobs, loop over all slices
for (( I=0; $I < NU_SIZE; I++ )); do

  export NU_RANK=$I
  if (( NU_SIZE > 1 )); then
    export OF="${OUT_FILE%%.dat}_${NU_RANK}.dat"
  else
    export OF="${OUT_FILE}";
  fi
  export CONDOR_SCRIPT="condor_script_${OF%%.dat}"
  export UNPACK_SCRIPT="nu_script_${OF%%.dat}";

  echo "Submitting with options $@, slice $NU_RANK / $NU_SIZE."
  echo "Output file: $OF"

  # Generate condor submit script
  cat <<-EOF > $CONDOR_SCRIPT
Universe                = grid
GridResource            = gt2 fnpcosg1.fnal.gov/jobmanager-condor
Executable              = $UNPACK_SCRIPT
Output                  = $OF
Error                   = $OF.err
Log                     = $OF.log
Environment             = "NU_RANK=$NU_RANK;NU_SIZE=$NU_SIZE"
transfer_input_files    = $CONDOR_TARBALL
transfer_output         = true
transfer_error          = true
transfer_executable     = true
when_to_transfer_output = ON_EXIT_OR_EVICT
stream_output           = false
stream_error            = false
Notification            = always
Notify_User             = jkopp@fnal.gov
globusrsl               = (jobtype=single)(maxwalltime=999)
QUEUE
EOF
      
  # Generate script to unpack and run code
  cat << EOF > $UNPACK_SCRIPT
#!/bin/bash
tar -zxf $CONDOR_TARBALL
cd 0-code/
./nu $@
EOF

  # Submit job
  condor_submit -debug $CONDOR_SCRIPT
done

